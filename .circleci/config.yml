version: 2.1
orbs:
  firebase-deploy: azdevs/firebase-deploy@1.0.0
jobs:
  testing:
    working_directory: ~/my-project
    docker:
      - image: circleci/node:13.8.0-browsers
    steps:
      - checkout 
      - run: npm install
      - run: npm run test -- --no-watch --no-progress --browsers=ChromeHeadlessCI
      - save_cache:
          key: my-project-{{ .Branch }}-{{ checksum "package-lock.json" }}
          paths:
            - "node_modules"
  build:
    working_directory: ~/my-project
    docker:
      - image: circleci/node:13.8.0-browsers
    steps:
      - checkout
      - restore_cache:
          key: my-project-{{ .Branch }}-{{ checksum "package-lock.json" }}
      - run:
          name: Building
          command: npm run build --prod
      - save_cache:
          key: v1-dist-{{ .Environment.CIRCLE_BRANCH }}-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - www
            - package.json
            - firebase.json
            - .firebaserc
  deploy:
    working_directory: ~/my-project
    docker:
      - image: 'circleci/node:13.8.0-browsers'
    steps:
      - restore_cache:
          key: v1-dist-{{ .Environment.CIRCLE_BRANCH }}-{{ .Environment.CIRCLE_SHA1 }}
      - run:
          name: Install Firebase Tools
          command: npm install --prefix=./firebase-deploy firebase-tools
      # - run:
      #     name: Deploy Master to Firebase
      #     command: npm run firebase-deploy
      # - attach_workspace:
      #     at: /tmp/workspace
      - run:
          name: Deploy to Firebase
          command: >-
            ./firebase-deploy/node_modules/.bin/firebase deploy --token='1//0fLly0WkGtteWCgYIARAAGA8SNwF-L9Ir2bzV2ulSprOJsFudv2Dt3ORSP3VYpkuHyIEGflnwID2EM7LHe18Ca6XbyTT0CF8SpP0'
      # - firebase-deploy/deploy:
      #     token: '1//0fLly0WkGtteWCgYIARAAGA8SNwF-L9Ir2bzV2ulSprOJsFudv2Dt3ORSP3VYpkuHyIEGflnwID2EM7LHe18Ca6XbyTT0CF8SpP0'
          

workflows:
  build-and-deploy:
    jobs:
      - testing
      - build:
          filters:
            branches:
              only: staging
      - deploy:
          requires:
            - build
          filters:
            branches:
              only: staging
